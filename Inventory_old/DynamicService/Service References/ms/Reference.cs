//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DynamicService.ms {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ms.IInventoryService")]
    public interface IInventoryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetPoCreditTerms", ReplyAction="http://tempuri.org/IInventoryService/GetPoCreditTermsResponse")]
        Org.Softech.Inventory.Business.Objects.POCreditPeriod[] GetPoCreditTerms(string p_stPOCode, System.Nullable<long> p_nOrganization);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetPOWithAdvance", ReplyAction="http://tempuri.org/IInventoryService/GetPOWithAdvanceResponse")]
        Org.Softech.Inventory.Business.Objects.PurchaseOrder[] GetPOWithAdvance(long p_nOrgId, long p_nInvVendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdatePOFromBill", ReplyAction="http://tempuri.org/IInventoryService/UpdatePOFromBillResponse")]
        bool UpdatePOFromBill(long p_nInvPo, bool p_bAdvancePmnt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/UpdateAdvancePayment", ReplyAction="http://tempuri.org/IInventoryService/UpdateAdvancePaymentResponse")]
        bool UpdateAdvancePayment(string p_POCode, long p_nOrgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetStoreItemList", ReplyAction="http://tempuri.org/IInventoryService/GetStoreItemListResponse")]
        Org.Softech.Inventory.Business.Objects.ItemDetail[] GetStoreItemList(System.Nullable<long> p_nStore, System.Nullable<long> p_user_id, System.Nullable<long> OrgId, string p_CategoryCode, string p_ProductCode, string p_ProductDescription, string p_GenericName, int p_nLimit, int p_nOffSet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/LoadUnitByItemOid", ReplyAction="http://tempuri.org/IInventoryService/LoadUnitByItemOidResponse")]
        Org.Softech.Inventory.Business.Objects.ItemUnit[] LoadUnitByItemOid(System.Nullable<long> p_nItemOid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/LoadItem_LeafUnit", ReplyAction="http://tempuri.org/IInventoryService/LoadItem_LeafUnitResponse")]
        Org.Softech.Inventory.Business.Objects.ItemUnit[] LoadItem_LeafUnit(System.Nullable<long> p_nItemOid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetMaxCode", ReplyAction="http://tempuri.org/IInventoryService/GetMaxCodeResponse")]
        string GetMaxCode(System.Nullable<long> p_nTransactionType, System.Nullable<long> p_nOrgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SaveStoreIssueRequest", ReplyAction="http://tempuri.org/IInventoryService/SaveStoreIssueRequestResponse")]
        System.Nullable<long> SaveStoreIssueRequest(Org.Softech.Inventory.Business.Objects.StoreTransaction p_oStoreTransactions, Org.Softech.Inventory.Business.Objects.StoreTransactionDetail[] p_lStoreTransactionDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/LoadIssuance", ReplyAction="http://tempuri.org/IInventoryService/LoadIssuanceResponse")]
        Org.Softech.Inventory.Business.Objects.StoreTransaction[] LoadIssuance(string p_nRequestOid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/GetSirDetailForPatientReport", ReplyAction="http://tempuri.org/IInventoryService/GetSirDetailForPatientReportResponse")]
        Org.Softech.Inventory.Business.Objects.StoreTransactionDetail[] GetSirDetailForPatientReport(string strId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SaveStoreIssueNote", ReplyAction="http://tempuri.org/IInventoryService/SaveStoreIssueNoteResponse")]
        System.Nullable<long> SaveStoreIssueNote(Org.Softech.Inventory.Business.Objects.StoreTransaction p_oStoreTransactions, Org.Softech.Inventory.Business.Objects.StoreTransactionDetail[] p_lStoreTransactionDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/LoadStoreCategories", ReplyAction="http://tempuri.org/IInventoryService/LoadStoreCategoriesResponse")]
        Org.Softech.Inventory.Business.Objects.Item[] LoadStoreCategories(long OrgID, string search_Text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/LoadCategoryItems", ReplyAction="http://tempuri.org/IInventoryService/LoadCategoryItemsResponse")]
        Org.Softech.Inventory.Business.Objects.ItemDetail[] LoadCategoryItems(long p_ID, string search_Text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventoryService/SaveInvDepartmentRecieving", ReplyAction="http://tempuri.org/IInventoryService/SaveInvDepartmentRecievingResponse")]
        bool SaveInvDepartmentRecieving(long p_ISSUANCE_ID, string ST_TRANS_CODE, long N_INSERT_USER_ID, long ORGANIZATION);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventoryServiceChannel : DynamicService.ms.IInventoryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryServiceClient : System.ServiceModel.ClientBase<DynamicService.ms.IInventoryService>, DynamicService.ms.IInventoryService {
        
        public InventoryServiceClient() {
        }
        
        public InventoryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Org.Softech.Inventory.Business.Objects.POCreditPeriod[] GetPoCreditTerms(string p_stPOCode, System.Nullable<long> p_nOrganization) {
            return base.Channel.GetPoCreditTerms(p_stPOCode, p_nOrganization);
        }
        
        public Org.Softech.Inventory.Business.Objects.PurchaseOrder[] GetPOWithAdvance(long p_nOrgId, long p_nInvVendor) {
            return base.Channel.GetPOWithAdvance(p_nOrgId, p_nInvVendor);
        }
        
        public bool UpdatePOFromBill(long p_nInvPo, bool p_bAdvancePmnt) {
            return base.Channel.UpdatePOFromBill(p_nInvPo, p_bAdvancePmnt);
        }
        
        public bool UpdateAdvancePayment(string p_POCode, long p_nOrgId) {
            return base.Channel.UpdateAdvancePayment(p_POCode, p_nOrgId);
        }
        
        public Org.Softech.Inventory.Business.Objects.ItemDetail[] GetStoreItemList(System.Nullable<long> p_nStore, System.Nullable<long> p_user_id, System.Nullable<long> OrgId, string p_CategoryCode, string p_ProductCode, string p_ProductDescription, string p_GenericName, int p_nLimit, int p_nOffSet) {
            return base.Channel.GetStoreItemList(p_nStore, p_user_id, OrgId, p_CategoryCode, p_ProductCode, p_ProductDescription, p_GenericName, p_nLimit, p_nOffSet);
        }
        
        public Org.Softech.Inventory.Business.Objects.ItemUnit[] LoadUnitByItemOid(System.Nullable<long> p_nItemOid) {
            return base.Channel.LoadUnitByItemOid(p_nItemOid);
        }
        
        public Org.Softech.Inventory.Business.Objects.ItemUnit[] LoadItem_LeafUnit(System.Nullable<long> p_nItemOid) {
            return base.Channel.LoadItem_LeafUnit(p_nItemOid);
        }
        
        public string GetMaxCode(System.Nullable<long> p_nTransactionType, System.Nullable<long> p_nOrgId) {
            return base.Channel.GetMaxCode(p_nTransactionType, p_nOrgId);
        }
        
        public System.Nullable<long> SaveStoreIssueRequest(Org.Softech.Inventory.Business.Objects.StoreTransaction p_oStoreTransactions, Org.Softech.Inventory.Business.Objects.StoreTransactionDetail[] p_lStoreTransactionDetail) {
            return base.Channel.SaveStoreIssueRequest(p_oStoreTransactions, p_lStoreTransactionDetail);
        }
        
        public Org.Softech.Inventory.Business.Objects.StoreTransaction[] LoadIssuance(string p_nRequestOid) {
            return base.Channel.LoadIssuance(p_nRequestOid);
        }
        
        public Org.Softech.Inventory.Business.Objects.StoreTransactionDetail[] GetSirDetailForPatientReport(string strId) {
            return base.Channel.GetSirDetailForPatientReport(strId);
        }
        
        public System.Nullable<long> SaveStoreIssueNote(Org.Softech.Inventory.Business.Objects.StoreTransaction p_oStoreTransactions, Org.Softech.Inventory.Business.Objects.StoreTransactionDetail[] p_lStoreTransactionDetail) {
            return base.Channel.SaveStoreIssueNote(p_oStoreTransactions, p_lStoreTransactionDetail);
        }
        
        public Org.Softech.Inventory.Business.Objects.Item[] LoadStoreCategories(long OrgID, string search_Text) {
            return base.Channel.LoadStoreCategories(OrgID, search_Text);
        }
        
        public Org.Softech.Inventory.Business.Objects.ItemDetail[] LoadCategoryItems(long p_ID, string search_Text) {
            return base.Channel.LoadCategoryItems(p_ID, search_Text);
        }
        
        public bool SaveInvDepartmentRecieving(long p_ISSUANCE_ID, string ST_TRANS_CODE, long N_INSERT_USER_ID, long ORGANIZATION) {
            return base.Channel.SaveInvDepartmentRecieving(p_ISSUANCE_ID, ST_TRANS_CODE, N_INSERT_USER_ID, ORGANIZATION);
        }
    }
}
